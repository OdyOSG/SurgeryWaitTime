cohort_id,cohort_name,json,sql
1,SWT breast cancer with cancer surgery within 30 days before diagnosis,"{
  ""ConceptSets"": [
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 19,
      ""name"": ""Breast cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""189336000"",
              ""CONCEPT_ID"": 81250,
              ""CONCEPT_NAME"": ""Carcinoma in situ of breast"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""372137005"",
              ""CONCEPT_ID"": 4162253,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of breast"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 20,
      ""name"": ""Breast cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19126"",
              ""CONCEPT_ID"": 2102681,
              ""CONCEPT_NAME"": ""Excision of breast lesion identified by preoperative placement of radiological marker, open; each additional lesion separately identified by a preoperative radiological marker (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19125"",
              ""CONCEPT_ID"": 2102680,
              ""CONCEPT_NAME"": ""Excision of breast lesion identified by preoperative placement of radiological marker, open; single lesion"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19120"",
              ""CONCEPT_ID"": 2102679,
              ""CONCEPT_NAME"": ""Excision of cyst, fibroadenoma, or other benign or malignant tumor, aberrant breast tissue, duct lesion, nipple or areolar lesion (except 19300), open, male or female, 1 or more lesions"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19307"",
              ""CONCEPT_ID"": 2102736,
              ""CONCEPT_NAME"": ""Mastectomy, modified radical, including axillary lymph nodes, with or without pectoralis minor muscle, but excluding pectoralis major muscle"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19301"",
              ""CONCEPT_ID"": 2102720,
              ""CONCEPT_NAME"": ""Mastectomy, partial (eg, lumpectomy, tylectomy, quadrantectomy, segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19302"",
              ""CONCEPT_ID"": 2102721,
              ""CONCEPT_NAME"": ""Mastectomy, partial (eg, lumpectomy, tylectomy, quadrantectomy, segmentectomy); with axillary lymphadenectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19306"",
              ""CONCEPT_ID"": 2102735,
              ""CONCEPT_NAME"": ""Mastectomy, radical, including pectoral muscles, axillary and internal mammary lymph nodes (Urban type operation)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19305"",
              ""CONCEPT_ID"": 2102734,
              ""CONCEPT_NAME"": ""Mastectomy, radical, including pectoral muscles, axillary lymph nodes"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19303"",
              ""CONCEPT_ID"": 2102732,
              ""CONCEPT_NAME"": ""Mastectomy, simple, complete"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 19,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""Cancer surgery within 30 days before dx and no radio- or systemic treatment before surgery"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ALL"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""DrugExposure"": {
                          ""CodesetId"": 16
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ProcedureOccurrence"": {
                          ""CodesetId"": 15
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": []
                },
                ""CodesetId"": 20
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 30,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 2,
              ""Count"": 1
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no other malignancies "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (81250,4162253)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (81250,4162253)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2102681,2102680,2102679,2102736,2102720,2102721,2102735,2102734,2102732)

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
2,SWT breast cancer with no prior cancer treatment,"{
  ""ConceptSets"": [
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 19,
      ""name"": ""Breast cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""189336000"",
              ""CONCEPT_ID"": 81250,
              ""CONCEPT_NAME"": ""Carcinoma in situ of breast"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""372137005"",
              ""CONCEPT_ID"": 4162253,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of breast"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 20,
      ""name"": ""Breast cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19126"",
              ""CONCEPT_ID"": 2102681,
              ""CONCEPT_NAME"": ""Excision of breast lesion identified by preoperative placement of radiological marker, open; each additional lesion separately identified by a preoperative radiological marker (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19125"",
              ""CONCEPT_ID"": 2102680,
              ""CONCEPT_NAME"": ""Excision of breast lesion identified by preoperative placement of radiological marker, open; single lesion"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19120"",
              ""CONCEPT_ID"": 2102679,
              ""CONCEPT_NAME"": ""Excision of cyst, fibroadenoma, or other benign or malignant tumor, aberrant breast tissue, duct lesion, nipple or areolar lesion (except 19300), open, male or female, 1 or more lesions"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19307"",
              ""CONCEPT_ID"": 2102736,
              ""CONCEPT_NAME"": ""Mastectomy, modified radical, including axillary lymph nodes, with or without pectoralis minor muscle, but excluding pectoralis major muscle"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19301"",
              ""CONCEPT_ID"": 2102720,
              ""CONCEPT_NAME"": ""Mastectomy, partial (eg, lumpectomy, tylectomy, quadrantectomy, segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19302"",
              ""CONCEPT_ID"": 2102721,
              ""CONCEPT_NAME"": ""Mastectomy, partial (eg, lumpectomy, tylectomy, quadrantectomy, segmentectomy); with axillary lymphadenectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19306"",
              ""CONCEPT_ID"": 2102735,
              ""CONCEPT_NAME"": ""Mastectomy, radical, including pectoral muscles, axillary and internal mammary lymph nodes (Urban type operation)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19305"",
              ""CONCEPT_ID"": 2102734,
              ""CONCEPT_NAME"": ""Mastectomy, radical, including pectoral muscles, axillary lymph nodes"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19303"",
              ""CONCEPT_ID"": 2102732,
              ""CONCEPT_NAME"": ""Mastectomy, simple, complete"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 19,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""no cancer surgery with curative intent prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 20
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no radiotherapy prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 15
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior systemic cancer treatment prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""DrugExposure"": {
                ""CodesetId"": 16
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior malignancies except for non-melanoma skin cancers "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (81250,4162253)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (81250,4162253)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2102681,2102680,2102679,2102736,2102720,2102721,2102735,2102734,2102732)

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{4 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),4)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 4 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
3,SWT breast surgery outcome,"{
  ""ConceptSets"": [
    {
      ""id"": 1,
      ""name"": ""Breast cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19126"",
              ""CONCEPT_ID"": 2102681,
              ""CONCEPT_NAME"": ""Excision of breast lesion identified by preoperative placement of radiological marker, open; each additional lesion separately identified by a preoperative radiological marker (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19125"",
              ""CONCEPT_ID"": 2102680,
              ""CONCEPT_NAME"": ""Excision of breast lesion identified by preoperative placement of radiological marker, open; single lesion"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19120"",
              ""CONCEPT_ID"": 2102679,
              ""CONCEPT_NAME"": ""Excision of cyst, fibroadenoma, or other benign or malignant tumor, aberrant breast tissue, duct lesion, nipple or areolar lesion (except 19300), open, male or female, 1 or more lesions"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19307"",
              ""CONCEPT_ID"": 2102736,
              ""CONCEPT_NAME"": ""Mastectomy, modified radical, including axillary lymph nodes, with or without pectoralis minor muscle, but excluding pectoralis major muscle"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19301"",
              ""CONCEPT_ID"": 2102720,
              ""CONCEPT_NAME"": ""Mastectomy, partial (eg, lumpectomy, tylectomy, quadrantectomy, segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19302"",
              ""CONCEPT_ID"": 2102721,
              ""CONCEPT_NAME"": ""Mastectomy, partial (eg, lumpectomy, tylectomy, quadrantectomy, segmentectomy); with axillary lymphadenectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19306"",
              ""CONCEPT_ID"": 2102735,
              ""CONCEPT_NAME"": ""Mastectomy, radical, including pectoral muscles, axillary and internal mammary lymph nodes (Urban type operation)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19305"",
              ""CONCEPT_ID"": 2102734,
              ""CONCEPT_NAME"": ""Mastectomy, radical, including pectoral muscles, axillary lymph nodes"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""19303"",
              ""CONCEPT_ID"": 2102732,
              ""CONCEPT_NAME"": ""Mastectomy, simple, complete"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ProcedureOccurrence"": {
          ""CodesetId"": 1
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 0,
      ""PostDays"": 0
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2102681,2102680,2102679,2102736,2102720,2102721,2102735,2102734,2102732)

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
4,SWT colorectal cancer with cancer surgery within 30 days before diagnosis,"{
  ""ConceptSets"": [
    {
      ""id"": 13,
      ""name"": ""Colorectal cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""93761005"",
              ""CONCEPT_ID"": 197500,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of colon"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92568009"",
              ""CONCEPT_ID"": 75512,
              ""CONCEPT_NAME"": ""Carcinoma in situ of colon"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""93984006"",
              ""CONCEPT_ID"": 74582,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of rectum"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92696009"",
              ""CONCEPT_ID"": 75210,
              ""CONCEPT_NAME"": ""Carcinoma in situ of rectum"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 14,
      ""name"": ""Colorectal cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45110"",
              ""CONCEPT_ID"": 2109151,
              ""CONCEPT_NAME"": ""Proctectomy; complete, combined abdominoperineal, with colostomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45388"",
              ""CONCEPT_ID"": 46257514,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) (includes pre- and post-dilation and guide wire passage, when performed)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45384"",
              ""CONCEPT_ID"": 2109200,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by hot biopsy forceps"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45385"",
              ""CONCEPT_ID"": 2109201,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45190"",
              ""CONCEPT_ID"": 2109168,
              ""CONCEPT_NAME"": ""Destruction of rectal tumor (eg, electrodesiccation, electrosurgery, laser ablation, laser resection, cryosurgery) transanal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45160"",
              ""CONCEPT_ID"": 2109166,
              ""CONCEPT_NAME"": ""Excision of rectal tumor by proctotomy, transsacral or transcoccygeal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45172"",
              ""CONCEPT_ID"": 40756915,
              ""CONCEPT_NAME"": ""Excision of rectal tumor, transanal approach; including muscularis propria (ie, full thickness)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45171"",
              ""CONCEPT_ID"": 40756981,
              ""CONCEPT_NAME"": ""Excision of rectal tumor, transanal approach; not including muscularis propria (ie, partial thickness)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45126"",
              ""CONCEPT_ID"": 2109161,
              ""CONCEPT_NAME"": ""Pelvic exenteration for colorectal malignancy, with proctectomy (with or without colostomy), with removal of bladder and ureteral transplantations, and/or hysterectomy, or cervicectomy, with or without removal of tube(s), with or without removal of ovary("",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45119"",
              ""CONCEPT_ID"": 2109157,
              ""CONCEPT_NAME"": ""Proctectomy, combined abdominoperineal pull-through procedure (eg, colo-anal anastomosis), with creation of colonic reservoir (eg, J-pouch), with diverting enterostomy when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45112"",
              ""CONCEPT_ID"": 2109153,
              ""CONCEPT_NAME"": ""Proctectomy, combined abdominoperineal, pull-through procedure (eg, colo-anal anastomosis)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45120"",
              ""CONCEPT_ID"": 2109158,
              ""CONCEPT_NAME"": ""Proctectomy, complete (for congenital megacolon), abdominal and perineal approach; with pull-through procedure and anastomosis (eg, Swenson, Duhamel, or Soave type operation)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45121"",
              ""CONCEPT_ID"": 2109159,
              ""CONCEPT_NAME"": ""Proctectomy, complete (for congenital megacolon), abdominal and perineal approach; with subtotal or total colectomy, with multiple biopsies"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45114"",
              ""CONCEPT_ID"": 2109155,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with anastomosis; abdominal and transsacral approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45116"",
              ""CONCEPT_ID"": 2109156,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with anastomosis; transsacral approach only (Kraske type)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45113"",
              ""CONCEPT_ID"": 2109154,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with rectal mucosectomy, ileoanal anastomosis, creation of ileal reservoir (S or J), with or without loop ileostomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45123"",
              ""CONCEPT_ID"": 2109160,
              ""CONCEPT_NAME"": ""Proctectomy, partial, without anastomosis, perineal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45111"",
              ""CONCEPT_ID"": 2109152,
              ""CONCEPT_NAME"": ""Proctectomy; partial resection of rectum, transabdominal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45320"",
              ""CONCEPT_ID"": 2109177,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with ablation of tumor(s), polyp(s), or other lesion(s) not amenable to removal by hot biopsy forceps, bipolar cautery or snare technique (eg, laser)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45315"",
              ""CONCEPT_ID"": 2109175,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of multiple tumors, polyps, or other lesions by hot biopsy forceps, bipolar cautery or snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45308"",
              ""CONCEPT_ID"": 2109173,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of single tumor, polyp, or other lesion by hot biopsy forceps or bipolar cautery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45309"",
              ""CONCEPT_ID"": 2109174,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of single tumor, polyp, or other lesion by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45346"",
              ""CONCEPT_ID"": 46257703,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) (includes pre- and post-dilation and guide wire passage, when performed)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45339"",
              ""CONCEPT_ID"": 2109188,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) not amenable to removal by hot biopsy forceps, bipolar cautery or snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45333"",
              ""CONCEPT_ID"": 2109183,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by hot biopsy forceps"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45338"",
              ""CONCEPT_ID"": 2109187,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 13,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""Cancer surgery within 30 days before dx and no radio- or systemic treatment before surgery"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ALL"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""DrugExposure"": {
                          ""CodesetId"": 16
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ProcedureOccurrence"": {
                          ""CodesetId"": 15
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": []
                },
                ""CodesetId"": 14
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 30,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 2,
              ""Count"": 1
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no other malignancies "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (197500,75512,74582,75210)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (197500,75512,74582,75210)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 14 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2109151,46257514,2109200,2109201,2109168,2109166,40756915,40756981,2109161,2109157,2109153,2109158,2109159,2109155,2109156,2109154,2109160,2109152,2109177,2109175,2109173,2109174,46257703,2109188,2109183,2109187)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (2109151,2109200,2109201,2109168,2109166,40756915,40756981,2109161,2109157,2109153,2109158,2109159,2109155,2109156,2109154,2109160,2109152,2109177,2109175,2109173,2109174,46257703,2109188,2109183,2109187)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 13)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Procedure Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
5,SWT colorectal cancer with no prior cancer treatment,"{
  ""ConceptSets"": [
    {
      ""id"": 13,
      ""name"": ""Colorectal cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""93761005"",
              ""CONCEPT_ID"": 197500,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of colon"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92568009"",
              ""CONCEPT_ID"": 75512,
              ""CONCEPT_NAME"": ""Carcinoma in situ of colon"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""93984006"",
              ""CONCEPT_ID"": 74582,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of rectum"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92696009"",
              ""CONCEPT_ID"": 75210,
              ""CONCEPT_NAME"": ""Carcinoma in situ of rectum"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 14,
      ""name"": ""Colorectal cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45110"",
              ""CONCEPT_ID"": 2109151,
              ""CONCEPT_NAME"": ""Proctectomy; complete, combined abdominoperineal, with colostomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45388"",
              ""CONCEPT_ID"": 46257514,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) (includes pre- and post-dilation and guide wire passage, when performed)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45384"",
              ""CONCEPT_ID"": 2109200,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by hot biopsy forceps"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45385"",
              ""CONCEPT_ID"": 2109201,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45190"",
              ""CONCEPT_ID"": 2109168,
              ""CONCEPT_NAME"": ""Destruction of rectal tumor (eg, electrodesiccation, electrosurgery, laser ablation, laser resection, cryosurgery) transanal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45160"",
              ""CONCEPT_ID"": 2109166,
              ""CONCEPT_NAME"": ""Excision of rectal tumor by proctotomy, transsacral or transcoccygeal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45172"",
              ""CONCEPT_ID"": 40756915,
              ""CONCEPT_NAME"": ""Excision of rectal tumor, transanal approach; including muscularis propria (ie, full thickness)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45171"",
              ""CONCEPT_ID"": 40756981,
              ""CONCEPT_NAME"": ""Excision of rectal tumor, transanal approach; not including muscularis propria (ie, partial thickness)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45126"",
              ""CONCEPT_ID"": 2109161,
              ""CONCEPT_NAME"": ""Pelvic exenteration for colorectal malignancy, with proctectomy (with or without colostomy), with removal of bladder and ureteral transplantations, and/or hysterectomy, or cervicectomy, with or without removal of tube(s), with or without removal of ovary("",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45119"",
              ""CONCEPT_ID"": 2109157,
              ""CONCEPT_NAME"": ""Proctectomy, combined abdominoperineal pull-through procedure (eg, colo-anal anastomosis), with creation of colonic reservoir (eg, J-pouch), with diverting enterostomy when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45112"",
              ""CONCEPT_ID"": 2109153,
              ""CONCEPT_NAME"": ""Proctectomy, combined abdominoperineal, pull-through procedure (eg, colo-anal anastomosis)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45120"",
              ""CONCEPT_ID"": 2109158,
              ""CONCEPT_NAME"": ""Proctectomy, complete (for congenital megacolon), abdominal and perineal approach; with pull-through procedure and anastomosis (eg, Swenson, Duhamel, or Soave type operation)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45121"",
              ""CONCEPT_ID"": 2109159,
              ""CONCEPT_NAME"": ""Proctectomy, complete (for congenital megacolon), abdominal and perineal approach; with subtotal or total colectomy, with multiple biopsies"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45114"",
              ""CONCEPT_ID"": 2109155,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with anastomosis; abdominal and transsacral approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45116"",
              ""CONCEPT_ID"": 2109156,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with anastomosis; transsacral approach only (Kraske type)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45113"",
              ""CONCEPT_ID"": 2109154,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with rectal mucosectomy, ileoanal anastomosis, creation of ileal reservoir (S or J), with or without loop ileostomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45123"",
              ""CONCEPT_ID"": 2109160,
              ""CONCEPT_NAME"": ""Proctectomy, partial, without anastomosis, perineal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45111"",
              ""CONCEPT_ID"": 2109152,
              ""CONCEPT_NAME"": ""Proctectomy; partial resection of rectum, transabdominal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45320"",
              ""CONCEPT_ID"": 2109177,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with ablation of tumor(s), polyp(s), or other lesion(s) not amenable to removal by hot biopsy forceps, bipolar cautery or snare technique (eg, laser)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45315"",
              ""CONCEPT_ID"": 2109175,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of multiple tumors, polyps, or other lesions by hot biopsy forceps, bipolar cautery or snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45308"",
              ""CONCEPT_ID"": 2109173,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of single tumor, polyp, or other lesion by hot biopsy forceps or bipolar cautery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45309"",
              ""CONCEPT_ID"": 2109174,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of single tumor, polyp, or other lesion by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45346"",
              ""CONCEPT_ID"": 46257703,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) (includes pre- and post-dilation and guide wire passage, when performed)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45339"",
              ""CONCEPT_ID"": 2109188,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) not amenable to removal by hot biopsy forceps, bipolar cautery or snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45333"",
              ""CONCEPT_ID"": 2109183,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by hot biopsy forceps"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45338"",
              ""CONCEPT_ID"": 2109187,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 13,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""no cancer surgery with curative intent prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 14
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no radiotherapy prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 15
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior systemic cancer treatment prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""DrugExposure"": {
                ""CodesetId"": 16
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior malignancies except for non-melanoma skin cancers "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (197500,75512,74582,75210)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (197500,75512,74582,75210)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 14 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2109151,46257514,2109200,2109201,2109168,2109166,40756915,40756981,2109161,2109157,2109153,2109158,2109159,2109155,2109156,2109154,2109160,2109152,2109177,2109175,2109173,2109174,46257703,2109188,2109183,2109187)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (2109151,2109200,2109201,2109168,2109166,40756915,40756981,2109161,2109157,2109153,2109158,2109159,2109155,2109156,2109154,2109160,2109152,2109177,2109175,2109173,2109174,46257703,2109188,2109183,2109187)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 13)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{4 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),4)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 4 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
6,SWT colorectal surgery outcome,"{
  ""ConceptSets"": [
    {
      ""id"": 0,
      ""name"": ""Colorectal cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45110"",
              ""CONCEPT_ID"": 2109151,
              ""CONCEPT_NAME"": ""Proctectomy; complete, combined abdominoperineal, with colostomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45388"",
              ""CONCEPT_ID"": 46257514,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) (includes pre- and post-dilation and guide wire passage, when performed)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45384"",
              ""CONCEPT_ID"": 2109200,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by hot biopsy forceps"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45385"",
              ""CONCEPT_ID"": 2109201,
              ""CONCEPT_NAME"": ""Colonoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45190"",
              ""CONCEPT_ID"": 2109168,
              ""CONCEPT_NAME"": ""Destruction of rectal tumor (eg, electrodesiccation, electrosurgery, laser ablation, laser resection, cryosurgery) transanal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45160"",
              ""CONCEPT_ID"": 2109166,
              ""CONCEPT_NAME"": ""Excision of rectal tumor by proctotomy, transsacral or transcoccygeal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45172"",
              ""CONCEPT_ID"": 40756915,
              ""CONCEPT_NAME"": ""Excision of rectal tumor, transanal approach; including muscularis propria (ie, full thickness)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45171"",
              ""CONCEPT_ID"": 40756981,
              ""CONCEPT_NAME"": ""Excision of rectal tumor, transanal approach; not including muscularis propria (ie, partial thickness)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45126"",
              ""CONCEPT_ID"": 2109161,
              ""CONCEPT_NAME"": ""Pelvic exenteration for colorectal malignancy, with proctectomy (with or without colostomy), with removal of bladder and ureteral transplantations, and/or hysterectomy, or cervicectomy, with or without removal of tube(s), with or without removal of ovary("",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45119"",
              ""CONCEPT_ID"": 2109157,
              ""CONCEPT_NAME"": ""Proctectomy, combined abdominoperineal pull-through procedure (eg, colo-anal anastomosis), with creation of colonic reservoir (eg, J-pouch), with diverting enterostomy when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45112"",
              ""CONCEPT_ID"": 2109153,
              ""CONCEPT_NAME"": ""Proctectomy, combined abdominoperineal, pull-through procedure (eg, colo-anal anastomosis)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45120"",
              ""CONCEPT_ID"": 2109158,
              ""CONCEPT_NAME"": ""Proctectomy, complete (for congenital megacolon), abdominal and perineal approach; with pull-through procedure and anastomosis (eg, Swenson, Duhamel, or Soave type operation)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45121"",
              ""CONCEPT_ID"": 2109159,
              ""CONCEPT_NAME"": ""Proctectomy, complete (for congenital megacolon), abdominal and perineal approach; with subtotal or total colectomy, with multiple biopsies"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45114"",
              ""CONCEPT_ID"": 2109155,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with anastomosis; abdominal and transsacral approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45116"",
              ""CONCEPT_ID"": 2109156,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with anastomosis; transsacral approach only (Kraske type)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45113"",
              ""CONCEPT_ID"": 2109154,
              ""CONCEPT_NAME"": ""Proctectomy, partial, with rectal mucosectomy, ileoanal anastomosis, creation of ileal reservoir (S or J), with or without loop ileostomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45123"",
              ""CONCEPT_ID"": 2109160,
              ""CONCEPT_NAME"": ""Proctectomy, partial, without anastomosis, perineal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45111"",
              ""CONCEPT_ID"": 2109152,
              ""CONCEPT_NAME"": ""Proctectomy; partial resection of rectum, transabdominal approach"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45320"",
              ""CONCEPT_ID"": 2109177,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with ablation of tumor(s), polyp(s), or other lesion(s) not amenable to removal by hot biopsy forceps, bipolar cautery or snare technique (eg, laser)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45315"",
              ""CONCEPT_ID"": 2109175,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of multiple tumors, polyps, or other lesions by hot biopsy forceps, bipolar cautery or snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45308"",
              ""CONCEPT_ID"": 2109173,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of single tumor, polyp, or other lesion by hot biopsy forceps or bipolar cautery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45309"",
              ""CONCEPT_ID"": 2109174,
              ""CONCEPT_NAME"": ""Proctosigmoidoscopy, rigid; with removal of single tumor, polyp, or other lesion by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45346"",
              ""CONCEPT_ID"": 46257703,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) (includes pre- and post-dilation and guide wire passage, when performed)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45339"",
              ""CONCEPT_ID"": 2109188,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with ablation of tumor(s), polyp(s), or other lesion(s) not amenable to removal by hot biopsy forceps, bipolar cautery or snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45333"",
              ""CONCEPT_ID"": 2109183,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by hot biopsy forceps"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""45338"",
              ""CONCEPT_ID"": 2109187,
              ""CONCEPT_NAME"": ""Sigmoidoscopy, flexible; with removal of tumor(s), polyp(s), or other lesion(s) by snare technique"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ProcedureOccurrence"": {
          ""CodesetId"": 0
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 0,
      ""PostDays"": 0
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2109151,46257514,2109200,2109201,2109168,2109166,40756915,40756981,2109161,2109157,2109153,2109158,2109159,2109155,2109156,2109154,2109160,2109152,2109177,2109175,2109173,2109174,46257703,2109188,2109183,2109187)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (2109151,2109200,2109201,2109168,2109166,40756915,40756981,2109161,2109157,2109153,2109158,2109159,2109155,2109156,2109154,2109160,2109152,2109177,2109175,2109173,2109174,46257703,2109188,2109183,2109187)
  and c.invalid_reason is null

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
7,SWT esophagus cancer with cancer surgery within 30 days before diagnosis,"{
  ""ConceptSets"": [
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 19,
      ""name"": ""Esophagus cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""371984007"",
              ""CONCEPT_ID"": 26638,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of esophagus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""838352004"",
              ""CONCEPT_ID"": 3654659,
              ""CONCEPT_NAME"": ""Adenocarcinoma in situ of esophagus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92585006"",
              ""CONCEPT_ID"": 28109,
              ""CONCEPT_NAME"": ""Carcinoma in situ of esophagus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 20,
      ""name"": ""Esophagus cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": []
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 19,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""Cancer surgery within 30 days before dx and no radio- or systemic treatment before surgery"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ALL"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""DrugExposure"": {
                          ""CodesetId"": 16
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ProcedureOccurrence"": {
                          ""CodesetId"": 15
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": []
                },
                ""CodesetId"": 20
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 30,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 2,
              ""Count"": 1
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no other malignancies "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (26638,3654659,28109)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (26638,3654659,28109)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where 0=1
) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
8,SWT esophagus cancer with no prior cancer treatment,"{
  ""ConceptSets"": [
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 19,
      ""name"": ""Esophagus cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""371984007"",
              ""CONCEPT_ID"": 26638,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of esophagus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""838352004"",
              ""CONCEPT_ID"": 3654659,
              ""CONCEPT_NAME"": ""Adenocarcinoma in situ of esophagus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92585006"",
              ""CONCEPT_ID"": 28109,
              ""CONCEPT_NAME"": ""Carcinoma in situ of esophagus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 20,
      ""name"": ""Esophagus cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": []
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 19,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""no cancer surgery with curative intent prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 20
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no radiotherapy prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 15
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior systemic cancer treatment prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""DrugExposure"": {
                ""CodesetId"": 16
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior malignancies except for non-melanoma skin cancers "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (26638,3654659,28109)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (26638,3654659,28109)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where 0=1
) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{4 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),4)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 4 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
9,SWT esophagus surgery outcome,"{
  ""ConceptSets"": [
    {
      ""id"": 1,
      ""name"": ""Esophagus cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": []
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ProcedureOccurrence"": {
          ""CodesetId"": 1
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 0,
      ""PostDays"": 0
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where 0=1
) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
10,SWT lung cancer with cancer surgery within 30 days before diagnosis,"{
  ""ConceptSets"": [
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 19,
      ""name"": ""Lung cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92649001"",
              ""CONCEPT_ID"": 255507,
              ""CONCEPT_NAME"": ""Carcinoma in situ of lung"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""93880001"",
              ""CONCEPT_ID"": 258369,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of lung"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""789695003"",
              ""CONCEPT_ID"": 37312138,
              ""CONCEPT_NAME"": ""Non-mucinous adenocarcinoma in situ of lung"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 20,
      ""name"": ""Lung cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32320"",
              ""CONCEPT_ID"": 2106731,
              ""CONCEPT_NAME"": ""Decortication and parietal pleurectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32310"",
              ""CONCEPT_ID"": 2106730,
              ""CONCEPT_NAME"": ""Pleurectomy, parietal (separate procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32482"",
              ""CONCEPT_ID"": 2106762,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; 2 lobes (bilobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32480"",
              ""CONCEPT_ID"": 2106751,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; single lobe (lobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32484"",
              ""CONCEPT_ID"": 2106763,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; single segment (segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32488"",
              ""CONCEPT_ID"": 2106765,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with all remaining lung following previous removal of a portion of lung (completion pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32486"",
              ""CONCEPT_ID"": 2106764,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with circumferential resection of segment of bronchus followed by broncho-bronchial anastomosis (sleeve lobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32491"",
              ""CONCEPT_ID"": 2106766,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with resection-plication of emphysematous lung(s) (bullous or non-bullous) for lung volume reduction, sternal split or transthoracic approach, includes any pleural procedure, when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32440"",
              ""CONCEPT_ID"": 2106748,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32445"",
              ""CONCEPT_ID"": 2106750,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy; extrapleural"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32442"",
              ""CONCEPT_ID"": 2106749,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy; with resection of segment of trachea followed by broncho-tracheal anastomosis (sleeve pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32501"",
              ""CONCEPT_ID"": 2106768,
              ""CONCEPT_NAME"": ""Resection and repair of portion of bronchus (bronchoplasty) when performed at time of lobectomy or segmentectomy (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32504"",
              ""CONCEPT_ID"": 2106770,
              ""CONCEPT_NAME"": ""Resection of apical lung tumor (eg, Pancoast tumor), including chest wall resection, rib(s) resection(s), neurovascular dissection, when performed; with chest wall reconstruction"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32503"",
              ""CONCEPT_ID"": 2106769,
              ""CONCEPT_NAME"": ""Resection of apical lung tumor (eg, Pancoast tumor), including chest wall resection, rib(s) resection(s), neurovascular dissection, when performed; without chest wall reconstruction(s)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32668"",
              ""CONCEPT_ID"": 42742515,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32662"",
              ""CONCEPT_ID"": 2106829,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with excision of mediastinal cyst, tumor, or mass"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32661"",
              ""CONCEPT_ID"": 2106828,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with excision of pericardial cyst, tumor, or mass"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32663"",
              ""CONCEPT_ID"": 2106830,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with lobectomy (single lobe)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32674"",
              ""CONCEPT_ID"": 42742521,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with mediastinal and regional lymphadenectomy (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32656"",
              ""CONCEPT_ID"": 2106822,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with parietal pleurectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32669"",
              ""CONCEPT_ID"": 42742516,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of a single lung segment (segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32671"",
              ""CONCEPT_ID"": 42742518,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of lung (pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32670"",
              ""CONCEPT_ID"": 42742517,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of two lobes (bilobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32673"",
              ""CONCEPT_ID"": 42742520,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with resection of thymus, unilateral or bilateral"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32672"",
              ""CONCEPT_ID"": 42742519,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with resection-plication for emphysematous lung (bullous or non-bullous) for lung volume reduction (LVRS), unilateral includes any pleural procedure, when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32667"",
              ""CONCEPT_ID"": 42742514,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with therapeutic wedge resection (eg, mass or nodule), each additional resection, ipsilateral (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32666"",
              ""CONCEPT_ID"": 42742513,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with therapeutic wedge resection (eg, mass, nodule), initial unilateral"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32507"",
              ""CONCEPT_ID"": 42742510,
              ""CONCEPT_NAME"": ""Thoracotomy; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32506"",
              ""CONCEPT_ID"": 42742509,
              ""CONCEPT_NAME"": ""Thoracotomy; with therapeutic wedge resection (eg, mass or nodule), each additional resection, ipsilateral (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32505"",
              ""CONCEPT_ID"": 42742508,
              ""CONCEPT_NAME"": ""Thoracotomy; with therapeutic wedge resection (eg, mass, nodule), initial"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 19,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""Cancer surgery within 30 days before dx and no radio- or systemic treatment before surgery"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ALL"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""DrugExposure"": {
                          ""CodesetId"": 16
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ProcedureOccurrence"": {
                          ""CodesetId"": 15
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 0,
                        ""Count"": 0
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": []
                },
                ""CodesetId"": 20
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 30,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 2,
              ""Count"": 1
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no other malignancies "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (255507,258369,37312138)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (255507,258369,37312138)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2106731,2106730,2106762,2106751,2106763,2106765,2106764,2106766,2106748,2106750,2106749,2106768,2106770,2106769,42742515,2106829,2106828,2106830,42742521,2106822,42742516,42742518,42742517,42742520,42742519,42742514,42742513,42742510,42742509,42742508)

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
11,SWT lung cancer with no prior cancer treatment,"{
  ""ConceptSets"": [
    {
      ""id"": 15,
      ""name"": ""Radiotherapy concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010919"",
              ""CONCEPT_ID"": 45889179,
              ""CONCEPT_NAME"": ""Clinical Brachytherapy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010917"",
              ""CONCEPT_ID"": 45888584,
              ""CONCEPT_NAME"": ""Clinical Intracavitary Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010855"",
              ""CONCEPT_ID"": 45888077,
              ""CONCEPT_NAME"": ""Medical Radiation Physics, Dosimetry, Treatment Devices, and Special Services for Radiation Treatment"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010895"",
              ""CONCEPT_ID"": 45889761,
              ""CONCEPT_NAME"": ""Neutron Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015093"",
              ""CONCEPT_ID"": 45890444,
              ""CONCEPT_NAME"": ""Other Radiation Procedures"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010904"",
              ""CONCEPT_ID"": 45888139,
              ""CONCEPT_NAME"": ""Proton Beam Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010910"",
              ""CONCEPT_ID"": 45889273,
              ""CONCEPT_NAME"": ""Hyperthermia"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010875"",
              ""CONCEPT_ID"": 45888117,
              ""CONCEPT_NAME"": ""Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1010898"",
              ""CONCEPT_ID"": 45887884,
              ""CONCEPT_NAME"": ""Radiation Treatment Management"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4 Hierarchy"",
              ""CONCEPT_CODE"": ""1015092"",
              ""CONCEPT_ID"": 45890445,
              ""CONCEPT_NAME"": ""Stereotactic Radiation Treatment Delivery"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""CPT4""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 16,
      ""name"": ""Systemic cancer treatment concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ATC 2nd"",
              ""CONCEPT_CODE"": ""L01"",
              ""CONCEPT_ID"": 21601387,
              ""CONCEPT_NAME"": ""ANTINEOPLASTIC AGENTS"",
              ""DOMAIN_ID"": ""Drug"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""C"",
              ""STANDARD_CONCEPT_CAPTION"": ""Classification"",
              ""VOCABULARY_ID"": ""ATC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 18,
      ""name"": ""Malignant tumor excluding skin cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""363346000"",
              ""CONCEPT_ID"": 443392,
              ""CONCEPT_NAME"": ""Malignant neoplastic disease"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""429114002"",
              ""CONCEPT_ID"": 4179980,
              ""CONCEPT_NAME"": ""Malignant basal cell neoplasm of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""254651007"",
              ""CONCEPT_ID"": 4111921,
              ""CONCEPT_NAME"": ""Squamous cell carcinoma of skin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 19,
      ""name"": ""Lung cancer concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""92649001"",
              ""CONCEPT_ID"": 255507,
              ""CONCEPT_NAME"": ""Carcinoma in situ of lung"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""93880001"",
              ""CONCEPT_ID"": 258369,
              ""CONCEPT_NAME"": ""Primary malignant neoplasm of lung"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""789695003"",
              ""CONCEPT_ID"": 37312138,
              ""CONCEPT_NAME"": ""Non-mucinous adenocarcinoma in situ of lung"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 20,
      ""name"": ""Lung cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32320"",
              ""CONCEPT_ID"": 2106731,
              ""CONCEPT_NAME"": ""Decortication and parietal pleurectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32310"",
              ""CONCEPT_ID"": 2106730,
              ""CONCEPT_NAME"": ""Pleurectomy, parietal (separate procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32482"",
              ""CONCEPT_ID"": 2106762,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; 2 lobes (bilobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32480"",
              ""CONCEPT_ID"": 2106751,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; single lobe (lobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32484"",
              ""CONCEPT_ID"": 2106763,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; single segment (segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32488"",
              ""CONCEPT_ID"": 2106765,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with all remaining lung following previous removal of a portion of lung (completion pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32486"",
              ""CONCEPT_ID"": 2106764,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with circumferential resection of segment of bronchus followed by broncho-bronchial anastomosis (sleeve lobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32491"",
              ""CONCEPT_ID"": 2106766,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with resection-plication of emphysematous lung(s) (bullous or non-bullous) for lung volume reduction, sternal split or transthoracic approach, includes any pleural procedure, when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32440"",
              ""CONCEPT_ID"": 2106748,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32445"",
              ""CONCEPT_ID"": 2106750,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy; extrapleural"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32442"",
              ""CONCEPT_ID"": 2106749,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy; with resection of segment of trachea followed by broncho-tracheal anastomosis (sleeve pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32501"",
              ""CONCEPT_ID"": 2106768,
              ""CONCEPT_NAME"": ""Resection and repair of portion of bronchus (bronchoplasty) when performed at time of lobectomy or segmentectomy (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32504"",
              ""CONCEPT_ID"": 2106770,
              ""CONCEPT_NAME"": ""Resection of apical lung tumor (eg, Pancoast tumor), including chest wall resection, rib(s) resection(s), neurovascular dissection, when performed; with chest wall reconstruction"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32503"",
              ""CONCEPT_ID"": 2106769,
              ""CONCEPT_NAME"": ""Resection of apical lung tumor (eg, Pancoast tumor), including chest wall resection, rib(s) resection(s), neurovascular dissection, when performed; without chest wall reconstruction(s)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32668"",
              ""CONCEPT_ID"": 42742515,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32662"",
              ""CONCEPT_ID"": 2106829,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with excision of mediastinal cyst, tumor, or mass"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32661"",
              ""CONCEPT_ID"": 2106828,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with excision of pericardial cyst, tumor, or mass"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32663"",
              ""CONCEPT_ID"": 2106830,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with lobectomy (single lobe)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32674"",
              ""CONCEPT_ID"": 42742521,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with mediastinal and regional lymphadenectomy (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32656"",
              ""CONCEPT_ID"": 2106822,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with parietal pleurectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32669"",
              ""CONCEPT_ID"": 42742516,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of a single lung segment (segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32671"",
              ""CONCEPT_ID"": 42742518,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of lung (pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32670"",
              ""CONCEPT_ID"": 42742517,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of two lobes (bilobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32673"",
              ""CONCEPT_ID"": 42742520,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with resection of thymus, unilateral or bilateral"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32672"",
              ""CONCEPT_ID"": 42742519,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with resection-plication for emphysematous lung (bullous or non-bullous) for lung volume reduction (LVRS), unilateral includes any pleural procedure, when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32667"",
              ""CONCEPT_ID"": 42742514,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with therapeutic wedge resection (eg, mass or nodule), each additional resection, ipsilateral (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32666"",
              ""CONCEPT_ID"": 42742513,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with therapeutic wedge resection (eg, mass, nodule), initial unilateral"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32507"",
              ""CONCEPT_ID"": 42742510,
              ""CONCEPT_NAME"": ""Thoracotomy; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32506"",
              ""CONCEPT_ID"": 42742509,
              ""CONCEPT_NAME"": ""Thoracotomy; with therapeutic wedge resection (eg, mass or nodule), each additional resection, ipsilateral (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32505"",
              ""CONCEPT_ID"": 42742508,
              ""CONCEPT_NAME"": ""Thoracotomy; with therapeutic wedge resection (eg, mass, nodule), initial"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ConditionOccurrence"": {
          ""CodesetId"": 19,
          ""First"": true,
          ""Age"": {
            ""Value"": 18,
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 365,
      ""PostDays"": 365
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [
    {
      ""name"": ""no cancer surgery with curative intent prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 20
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": 1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no radiotherapy prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ProcedureOccurrence"": {
                ""CodesetId"": 15
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior systemic cancer treatment prior to dx"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""DrugExposure"": {
                ""CodesetId"": 16
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""no prior malignancies except for non-melanoma skin cancers "",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ConditionOccurrence"": {
                ""CodesetId"": 18
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45889179,45888584,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45889179,45888077,45889761,45890444,45888139,45889273,45888117,45887884,45890445)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21601387)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21601387)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443392)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443392)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4179980,4111921)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4179980,4111921)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (255507,258369,37312138)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (255507,258369,37312138)
  and c.invalid_reason is null

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2106731,2106730,2106762,2106751,2106763,2106765,2106764,2106766,2106748,2106750,2106749,2106768,2106770,2106769,42742515,2106829,2106828,2106830,42742521,2106822,42742516,42742518,42742517,42742520,42742519,42742514,42742513,42742510,42742509,42742508)

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE YEAR(C.start_date) - P.year_of_birth > 18
AND C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,365,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{4 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),4)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 4 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
12,SWT lung surgery outcome,"{
  ""ConceptSets"": [
    {
      ""id"": 1,
      ""name"": ""Lung cancer surgery with curative intent concept set"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32320"",
              ""CONCEPT_ID"": 2106731,
              ""CONCEPT_NAME"": ""Decortication and parietal pleurectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32310"",
              ""CONCEPT_ID"": 2106730,
              ""CONCEPT_NAME"": ""Pleurectomy, parietal (separate procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32482"",
              ""CONCEPT_ID"": 2106762,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; 2 lobes (bilobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32480"",
              ""CONCEPT_ID"": 2106751,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; single lobe (lobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32484"",
              ""CONCEPT_ID"": 2106763,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; single segment (segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32488"",
              ""CONCEPT_ID"": 2106765,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with all remaining lung following previous removal of a portion of lung (completion pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32486"",
              ""CONCEPT_ID"": 2106764,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with circumferential resection of segment of bronchus followed by broncho-bronchial anastomosis (sleeve lobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32491"",
              ""CONCEPT_ID"": 2106766,
              ""CONCEPT_NAME"": ""Removal of lung, other than pneumonectomy; with resection-plication of emphysematous lung(s) (bullous or non-bullous) for lung volume reduction, sternal split or transthoracic approach, includes any pleural procedure, when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32440"",
              ""CONCEPT_ID"": 2106748,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32445"",
              ""CONCEPT_ID"": 2106750,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy; extrapleural"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32442"",
              ""CONCEPT_ID"": 2106749,
              ""CONCEPT_NAME"": ""Removal of lung, pneumonectomy; with resection of segment of trachea followed by broncho-tracheal anastomosis (sleeve pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32501"",
              ""CONCEPT_ID"": 2106768,
              ""CONCEPT_NAME"": ""Resection and repair of portion of bronchus (bronchoplasty) when performed at time of lobectomy or segmentectomy (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32504"",
              ""CONCEPT_ID"": 2106770,
              ""CONCEPT_NAME"": ""Resection of apical lung tumor (eg, Pancoast tumor), including chest wall resection, rib(s) resection(s), neurovascular dissection, when performed; with chest wall reconstruction"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32503"",
              ""CONCEPT_ID"": 2106769,
              ""CONCEPT_NAME"": ""Resection of apical lung tumor (eg, Pancoast tumor), including chest wall resection, rib(s) resection(s), neurovascular dissection, when performed; without chest wall reconstruction(s)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32668"",
              ""CONCEPT_ID"": 42742515,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32662"",
              ""CONCEPT_ID"": 2106829,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with excision of mediastinal cyst, tumor, or mass"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32661"",
              ""CONCEPT_ID"": 2106828,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with excision of pericardial cyst, tumor, or mass"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32663"",
              ""CONCEPT_ID"": 2106830,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with lobectomy (single lobe)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32674"",
              ""CONCEPT_ID"": 42742521,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with mediastinal and regional lymphadenectomy (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32656"",
              ""CONCEPT_ID"": 2106822,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with parietal pleurectomy"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32669"",
              ""CONCEPT_ID"": 42742516,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of a single lung segment (segmentectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32671"",
              ""CONCEPT_ID"": 42742518,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of lung (pneumonectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32670"",
              ""CONCEPT_ID"": 42742517,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with removal of two lobes (bilobectomy)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32673"",
              ""CONCEPT_ID"": 42742520,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with resection of thymus, unilateral or bilateral"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32672"",
              ""CONCEPT_ID"": 42742519,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with resection-plication for emphysematous lung (bullous or non-bullous) for lung volume reduction (LVRS), unilateral includes any pleural procedure, when performed"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32667"",
              ""CONCEPT_ID"": 42742514,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with therapeutic wedge resection (eg, mass or nodule), each additional resection, ipsilateral (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32666"",
              ""CONCEPT_ID"": 42742513,
              ""CONCEPT_NAME"": ""Thoracoscopy, surgical; with therapeutic wedge resection (eg, mass, nodule), initial unilateral"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32507"",
              ""CONCEPT_ID"": 42742510,
              ""CONCEPT_NAME"": ""Thoracotomy; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32506"",
              ""CONCEPT_ID"": 42742509,
              ""CONCEPT_NAME"": ""Thoracotomy; with therapeutic wedge resection (eg, mass or nodule), each additional resection, ipsilateral (List separately in addition to code for primary procedure)"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""CPT4"",
              ""CONCEPT_CODE"": ""32505"",
              ""CONCEPT_ID"": 42742508,
              ""CONCEPT_NAME"": ""Thoracotomy; with therapeutic wedge resection (eg, mass, nodule), initial"",
              ""DOMAIN_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""CPT4""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""ProcedureOccurrence"": {
          ""CodesetId"": 1
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": 0,
      ""PostDays"": 0
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": ""First""
    }
  },
  ""QualifiedLimit"": {
    ""Type"": ""First""
  },
  ""ExpressionLimit"": {
    ""Type"": ""First""
  },
  ""InclusionRules"": [],
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": ""ERA"",
    ""EraPad"": 0
  },
  ""CensorWindow"": {},
  ""cdmVersionRange"": "">=5.0.0""
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2106731,2106730,2106762,2106751,2106763,2106765,2106764,2106766,2106748,2106750,2106749,2106768,2106770,2106769,42742515,2106829,2106828,2106830,42742521,2106822,42742516,42742518,42742517,42742520,42742519,42742514,42742513,42742510,42742509,42742508)

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;

select person_id, min(start_date) as start_date, end_date
into #final_cohort
from ( --cteEnds
	SELECT
		 c.person_id
		, c.start_date
		, MIN(ed.end_date) AS end_date
	FROM #cohort_rows c
	JOIN ( -- cteEndDates
    SELECT
      person_id
      , DATEADD(day,-1 * 0, event_date)  as end_date
    FROM
    (
      SELECT
        person_id
        , event_date
        , event_type
        , SUM(event_type) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS interval_status
      FROM
      (
        SELECT
          person_id
          , start_date AS event_date
          , -1 AS event_type
        FROM #cohort_rows

        UNION ALL


        SELECT
          person_id
          , DATEADD(day,0,end_date) as end_date
          , 1 AS event_type
        FROM #cohort_rows
      ) RAWDATA
    ) e
    WHERE interval_status = 0
  ) ed ON c.person_id = ed.person_id AND ed.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
) e
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
"
